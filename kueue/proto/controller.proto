syntax = "proto3";

option go_package = "kueue/kueue/proto";

service ControllerService {
  rpc GetTopic (ProducerTopicInfoRequest) returns (ProducerTopicInfoResponse); // used by producer
  rpc RegisterBroker (RegisterBrokerRequest) returns (RegisterBrokerResponse); // used by broker
  rpc Subscribe (ConsumerTopicInfoRequest) returns (ConsumerTopicInfoResponse); // used by consumer
  rpc Heartbeat (HeartbeatRequest) returns (HeartbeatResponse); // used by broker
}

// num_partitions and replication_factor are optional when getting an existing topic
message ProducerTopicInfoRequest {
  string topic_name = 1;
  optional int32 num_partitions = 2;
  optional int32 replication_factor = 3;
}

message ProducerTopicInfoResponse {
  string topic_name = 1;
  repeated PartitionMetadata partitions = 2;
}

message PartitionMetadata {
  int32 partition_id = 1;
  string leader_address = 2;
}

message ConsumerTopicInfoRequest {
  string topic_name = 1;
  string consumer_id = 2;
}

message ConsumerTopicInfoResponse {
  string topic_name = 1;
  PartitionMetadata partition = 2;
}

message HeartbeatRequest {
  string broker_id = 1;
}

message HeartbeatResponse {}

message RegisterBrokerRequest {
  string broker_id = 1;
  string broker_address = 2;
}

message RegisterBrokerResponse {}
